{"version":3,"sources":["node_modules/parcel-bundler/src/builtins/bundle-url.js","node_modules/parcel-bundler/src/builtins/bundle-loader.js","src/vendor.ts","src/player.ts","src/scenes/test.scene.ts","src/game.ts","src/index.ts"],"names":["bundleURL","getBundleURLCached","getBundleURL","Error","err","matches","stack","match","getBaseURL","url","replace","exports","require","loadBundlesLazy","bundles","Array","isArray","id","length","Promise","resolve","code","LazyPromise","reject","slice","then","loadBundles","all","map","loadBundle","bundleLoaders","registerBundleLoader","type","loader","module","load","register","bundle","substring","lastIndexOf","toLowerCase","bundleLoader","resolved","executor","promise","prototype","onSuccess","onError","catch"],"mappings":"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","file":"src.661cce98.map","sourceRoot":"..","sourcesContent":["var bundleURL = null;\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  // Attempt to find the URL of the current script and use that as the base URL\n  try {\n    throw new Error;\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\n","var getBundleURL = require('./bundle-url').getBundleURL;\n\nfunction loadBundlesLazy(bundles) {\n  if (!Array.isArray(bundles)) {\n    bundles = [bundles]\n  }\n\n  var id = bundles[bundles.length - 1];\n\n  try {\n    return Promise.resolve(require(id));\n  } catch (err) {\n    if (err.code === 'MODULE_NOT_FOUND') {\n      return new LazyPromise(function (resolve, reject) {\n        loadBundles(bundles.slice(0, -1))\n          .then(function () {\n            return require(id);\n          })\n          .then(resolve, reject);\n      });\n    }\n\n    throw err;\n  }\n}\n\nfunction loadBundles(bundles) {\n  return Promise.all(bundles.map(loadBundle));\n}\n\nvar bundleLoaders = {};\nfunction registerBundleLoader(type, loader) {\n  bundleLoaders[type] = loader;\n}\n\nmodule.exports = exports = loadBundlesLazy;\nexports.load = loadBundles;\nexports.register = registerBundleLoader;\n\nvar bundles = {};\nfunction loadBundle(bundle) {\n  var id;\n  if (Array.isArray(bundle)) {\n    id = bundle[1];\n    bundle = bundle[0];\n  }\n\n  if (bundles[bundle]) {\n    return bundles[bundle];\n  }\n\n  var type = (bundle.substring(bundle.lastIndexOf('.') + 1, bundle.length) || bundle).toLowerCase();\n  var bundleLoader = bundleLoaders[type];\n  if (bundleLoader) {\n    return bundles[bundle] = bundleLoader(getBundleURL() + bundle)\n      .then(function (resolved) {\n        if (resolved) {\n          module.bundle.register(id, resolved);\n        }\n\n        return resolved;\n      });\n  }\n}\n\nfunction LazyPromise(executor) {\n  this.executor = executor;\n  this.promise = null;\n}\n\nLazyPromise.prototype.then = function (onSuccess, onError) {\n  if (this.promise === null) this.promise = new Promise(this.executor)\n  return this.promise.then(onSuccess, onError)\n};\n\nLazyPromise.prototype.catch = function (onError) {\n  if (this.promise === null) this.promise = new Promise(this.executor)\n  return this.promise.catch(onError)\n};\n","// Create additional bundles for these libraries.\nimport(\"phaser\");\n","import Phaser from \"phaser\";\nimport { TestScene } from \"./scenes/test.scene\";\n\ninterface IRopeSegment extends Phaser.Physics.Matter.Sprite {\n  joint?: MatterJS.Constraint;\n  hook?: Phaser.Physics.Matter.Sprite;\n}\n\nexport class Player extends Phaser.Physics.Matter.Sprite {\n  public scene!: TestScene;\n\n  public ropeSegments: IRopeSegment[];\n  public hook!: Phaser.Physics.Matter.Sprite;\n\n  public hookedChest?: Phaser.Physics.Matter.Sprite;\n\n  public retractRopeTimer: Phaser.Time.TimerEvent;\n  public extendRopeTimer: Phaser.Time.TimerEvent;\n\n  constructor(\n    world: Phaser.Physics.Matter.World,\n    x: number,\n    y: number,\n    texture: string = \"\",\n    frame?: string | integer,\n    options?: object,\n  ) {\n    super(world, x, y, texture, frame, options);\n    this.setRectangle(60, 60, {\n      // for defaults, see:\n      // https://github.com/photonstorm/phaser/blob/v3.14.0/src/physics/matter-js/lib/body/Body.js\n\n      // Infinity prevents rotation after collision (default 0)\n      // can also be done with this.setFixedRotation()\n      inertia: Infinity,\n    });\n\n    this.extendRopeTimer = this.scene.time.addEvent({\n      delay: 100, // ms\n      callback: () => { this.addRopeSegment(); },\n      loop: true,\n      paused: true,\n    });\n\n    this.retractRopeTimer = this.scene.time.addEvent({\n      delay: 130, // ms\n      callback: () => { this.removeRopeSegment(); },\n      loop: true,\n      paused: true,\n    });\n\n    this.ropeSegments = [];\n    const tail = this.addRopeSegment();\n    tail.hook = this.scene.matter.add.sprite(tail.x, tail.y + 20, \"hook\", undefined, {});\n    this.hook = tail.hook;\n    tail.hook.setName(\"hook\");\n    tail.hook.setDisplayOrigin(10, 10);\n    tail.hook.setBody({\n      type: \"rectangle\",\n      width: 14,\n      height: 14,\n    }, {\n      friction: 0.1,\n      frictionAir: 0.1,\n      density: 0.1, // default 0.001\n      chamfer: { radius: 4 },\n      render: {\n        sprite: {\n          xOffset: -0.08,\n          yOffset: 0.14,\n        },\n      },\n    });\n    // hack to make the hook white instead of black\n    tail.hook.setTintFill(0xffffff);\n    tail.hook.setCollisionCategory(this.scene.RopeCollisionCategory);\n    tail.hook.setCollidesWith([\n      this.scene.BoundsCollisionCategory,\n      this.scene.ChestCollisionCategory,\n    ]);\n    tail.joint = this.scene.matter.add.joint(tail, tail.hook, 0, 0.6, {\n        pointA: {x: 0, y: 8},\n        pointB: {x: 4, y: -13},\n        render: {\n          anchors: false,\n          lineWidth: 1,\n          type: \"line\",\n        },\n      });\n  }\n\n  public update(time: number, delta: number): void {\n    if (this.scene.cursors.left!.isDown) {\n      this.setVelocityX(-5);\n    } else if (this.scene.cursors.right!.isDown) {\n      this.setVelocityX(5);\n    }\n\n    if (this.scene.cursors.down!.isUp) {\n      this.retractRopeTimer.paused = true;\n    }\n    if (this.scene.cursors.up!.isUp) {\n      this.extendRopeTimer.paused = true;\n    }\n\n    if (this.scene.cursors.down!.isDown) {\n      this.extendRope();\n    } else if (this.scene.cursors.up!.isDown) {\n      this.retractRope();\n    }\n\n    const ropeHead = this.getRopeHead();\n    ropeHead.setPosition(this.x, this.y + 50);\n  }\n\n  public onHookTouch(body: any) {\n    if (\n      this.hookedChest\n      || !body.gameObject\n      || body.gameObject.name !== \"chest\"\n      || !body.isSensor\n    ) {\n      return;\n    }\n\n    this.hookedChest = body.gameObject as Phaser.Physics.Matter.Sprite;\n\n    this.scene.matter.add.joint(this.hook, body.parent, 0, 0.6, {\n      pointA: {x: 0, y: 0},\n      pointB: {x: 0, y: -40},\n      render: {\n        anchors: false,\n        lineWidth: 1,\n        type: \"line\",\n      },\n    });\n  }\n\n  private extendRope(): void {\n    if (this.extendRopeTimer.paused) {\n      this.extendRopeTimer.paused = false;\n    }\n  }\n  private retractRope(): void {\n    if (this.retractRopeTimer.paused) {\n      this.retractRopeTimer.paused = false;\n    }\n  }\n\n  private getRopeHead() {\n    return this.ropeSegments[this.ropeSegments.length - 1];\n  }\n\n  private addRopeSegment(): IRopeSegment {\n    const head = this.getRopeHead();\n    const [x, y] = head ? [head.x, head.y] : [this.x, this.y + 50];\n\n    const segment = (this.scene.add.rectangle(x, y, 6, 18, 0x00aa00) as any as IRopeSegment);\n    this.scene.matter.add.gameObject(segment, {\n      chamfer: { radius: 2 },\n      // mass: 0.01,\n      // the higher the density, the less stretchy the rope becomes\n      density: 0.01, // default 0.001\n      friction: 0.05,\n      frictionAir: 0.1,\n    });\n    segment.setCollisionCategory(this.scene.RopeCollisionCategory);\n    segment.setCollidesWith([\n      this.scene.BoundsCollisionCategory,\n      this.scene.ChestCollisionCategory,\n    ]);\n\n    segment.setStatic(true);\n    this.ropeSegments.push(segment);\n    if (head) {\n      head.setStatic(false);\n      head.setY(head.y + 20);\n\n      const joint = this.scene.matter.add.joint(segment, head, 8, 0.6, {\n        pointA: {x: 0, y: 4},\n        pointB: {x: 0, y: -4},\n        render: {\n          anchors: false,\n          lineWidth: 1,\n          type: \"line\",\n        },\n      });\n      segment.joint = joint;\n    }\n    return segment;\n  }\n\n  private removeRopeSegment(): void {\n    const head = this.getRopeHead();\n    if (!head || head.hook) { return; }\n\n    if (head.joint) {\n      this.scene.matter.world.removeConstraint(head.joint, false);\n      head.joint = undefined;\n    }\n    head.destroy(true);\n    this.ropeSegments.splice(this.ropeSegments.length - 1, 1);\n\n    const nextHead = this.getRopeHead();\n    if (nextHead) {\n      nextHead.setAngle(0);\n      nextHead.setStatic(true);\n    }\n  }\n}\n","// @ts-ignore\nimport hookSprite from \"../assets/icons8-fishing-hook-30.png\";\nimport { Player } from \"../player\";\n\nexport class TestScene extends Phaser.Scene {\n  public cursors!: Phaser.Input.Keyboard.CursorKeys;\n  public player!: Player;\n\n  public BoundsCollisionCategory!: number;\n  public PlayerCollisionCategory!: number;\n  public PlatformCollisionCategory!: number;\n  public RopeCollisionCategory!: number;\n  public ChestCollisionCategory!: number;\n\n  constructor() {\n    super({key: \"Test\"});\n  }\n\n  public preload() {\n    this.load.image(\"hook\", hookSprite);\n  }\n\n  public create() {\n    this.cursors = this.input.keyboard.createCursorKeys();\n\n    // This can be done with repeated calls to this.matter.world.nextCategory()\n    // but it doesn't seem to get reset after game.destroy()\n    /* tslint:disable:no-bitwise */\n    this.BoundsCollisionCategory = 1 << 0;\n    this.PlayerCollisionCategory = 1 << 1;\n    this.PlatformCollisionCategory = 1 << 2;\n    this.RopeCollisionCategory = 1 << 3;\n    this.ChestCollisionCategory = 1 << 4;\n\n    this.matter.world.setBounds(\n      0,\n      -200,\n      (this.game.config.width as number),\n      (this.game.config.height as number) + 200,\n    );\n\n    // I don't know why, but objects created with `this.add.rectangle()` aren't visible unless\n    // I use the graphics api first for unrelated objects\n    const graphics = this.add.graphics({ x: 4, y: 4, fillStyle: { color: 0x0000aa } });\n    graphics.fillRectShape(new Phaser.Geom.Rectangle(0, 0, 4, 4));\n\n    const platform = (this.add.rectangle(360, 80, 700, 10, 0x000070) as any as Phaser.Physics.Matter.Image);\n    this.matter.add.gameObject(platform, { isStatic: true });\n    platform.setCollisionCategory(this.PlatformCollisionCategory);\n\n    this.player = new Player(this.matter.world, 360, 40);\n    this.sys.displayList.add(this.player);\n    this.sys.updateList.add(this.player);\n    this.player.setCollisionCategory(this.PlayerCollisionCategory);\n\n    this.player.setCollidesWith([this.BoundsCollisionCategory, this.PlatformCollisionCategory]);\n\n    // @ts-ignore\n    const { Body, Bodies } = Phaser.Physics.Matter.Matter;\n    const chest = (this.add.rectangle(0, 0, 100, 60, 0x663300) as any as Phaser.Physics.Matter.Image);\n    chest.setName(\"chest\");\n    this.matter.add.gameObject(chest, {});\n    const compoundBody = Body.create({\n      parts: [\n        Bodies.rectangle(0, 0, chest.width, chest.height, { chamfer: { radius: 4 } }),\n        Bodies.rectangle(0, chest.height * -0.5 - 10, 20, 20, { isSensor: true }),\n      ],\n      // mass: 0.1,\n      density: 0.1,\n      frictionAir: 0.1,\n      // friction: 0.5,\n      // frictionStatic: 10,\n    });\n    chest.setExistingBody(compoundBody);\n    chest.setDisplayOrigin(chest.displayOriginX, 28);\n    chest.setPosition(360, 380);\n    chest.setCollisionCategory(this.ChestCollisionCategory);\n    chest.setCollidesWith([this.BoundsCollisionCategory, this.RopeCollisionCategory]);\n\n    this.matter.world.on(\"collisionstart\", (event: any) => {\n      event.pairs.forEach((pair: any) => {\n        const { bodyA, bodyB } = pair;\n        const gameObjectA = bodyA.gameObject;\n        const gameObjectB = bodyB.gameObject;\n\n        if (gameObjectA && gameObjectA.name === \"hook\") {\n          this.player.onHookTouch(bodyB);\n        } else if (gameObjectB && gameObjectB.name === \"hook\") {\n          this.player.onHookTouch(bodyA);\n        }\n      });\n    });\n\n    this.matter.add.mouseSpring({});\n  }\n\n  public update(time: number, delta: number): void {\n    this.player.update(time, delta);\n  }\n}\n","import Phaser from \"phaser\";\nimport { TestScene } from \"./scenes/test.scene\";\n\nexport default function createGame(elem: HTMLElement, width: number, height: number) {\n  return new Phaser.Game({\n    parent: elem,\n    type: Phaser.AUTO,\n    width,\n    height,\n    resolution: 1,\n    physics: {\n      default: \"matter\",\n      arcade: {\n        debug: true,\n        gravity: {\n          y: 200,\n        },\n      },\n      matter: {\n        debug: true,\n        gravity: {\n          y: 0.7,\n        },\n      },\n    },\n    scene: [TestScene],\n  });\n}\n","// this import must be at the top of the file\nimport \"./vendor\";\n\nimport createGame from \"./game\";\n\nconst div = document.getElementById(\"main\");\nif (!div) {\n  throw new Error(\"#main element is not present.\");\n}\n\nconst game = createGame(div, 720, 400);\n\nif (module.hot) {\n  module.hot.dispose(() => {\n    game.destroy(true);\n  });\n}\n"]}